{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\divya\\\\OneDrive\\\\Documents\\\\GitHub\\\\Astro_AmazonHackon\\\\src\\\\Components\\\\ChatBot.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport \"./chatbot.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ChatBot = () => {\n  _s();\n  const [open, setOpen] = useState(false);\n  const [userInput, setUserInput] = useState('');\n  const [chatHistory, setChatHistory] = useState([]);\n  const toggleOpen = e => {\n    e.stopPropagation(); // Prevent toggling when clicking inside the chat window\n    setOpen(!open);\n  };\n  const handleInputChange = e => {\n    setUserInput(e.target.value);\n  };\n  const handleFormSubmit = async e => {\n    e.preventDefault();\n    if (userInput.trim() === '') return;\n    const userMessage = userInput;\n    setChatHistory([...chatHistory, {\n      sender: 'user',\n      message: userMessage\n    }]);\n    setUserInput('');\n    try {\n      const response = await fetch('http://yourserver.com/api/chat', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          message: userMessage\n        })\n      });\n      if (response.ok) {\n        const data = await response.json();\n        setChatHistory([...chatHistory, {\n          sender: 'user',\n          message: userMessage\n        }, {\n          sender: 'bot',\n          message: data.reply\n        }]);\n      } else {\n        console.error('Error fetching response from server.');\n      }\n    } catch (error) {\n      console.error('Error:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `chatbot-container ${open ? 'open' : ''}`,\n    onClick: toggleOpen,\n    children: open && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chatbot-content\",\n      onClick: e => e.stopPropagation(),\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"close-button\",\n        onClick: toggleOpen,\n        children: \"\\xD7\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"ChatBot\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-history\",\n        children: chatHistory.map((chat, index) => /*#__PURE__*/_jsxDEV(\"p\", {\n          className: chat.sender === 'user' ? 'user-message' : 'bot-message',\n          children: chat.message\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleFormSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: userInput,\n          onChange: handleInputChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Send\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n};\n_s(ChatBot, \"0bO+ZqAmim/Vky1dCdHrLzHLS2I=\");\n_c = ChatBot;\nexport default ChatBot;\nvar _c;\n$RefreshReg$(_c, \"ChatBot\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","ChatBot","_s","open","setOpen","userInput","setUserInput","chatHistory","setChatHistory","toggleOpen","e","stopPropagation","handleInputChange","target","value","handleFormSubmit","preventDefault","trim","userMessage","sender","message","response","fetch","method","headers","body","JSON","stringify","ok","data","json","reply","console","error","className","onClick","children","fileName","_jsxFileName","lineNumber","columnNumber","map","chat","index","onSubmit","type","onChange","_c","$RefreshReg$"],"sources":["C:/Users/divya/OneDrive/Documents/GitHub/Astro_AmazonHackon/src/Components/ChatBot.js"],"sourcesContent":["import React, { useState } from 'react';\nimport \"./chatbot.css\";\n\nconst ChatBot = () => {\n  const [open, setOpen] = useState(false);\n  const [userInput, setUserInput] = useState('');\n  const [chatHistory, setChatHistory] = useState([]);\n\n  const toggleOpen = (e) => {\n    e.stopPropagation(); // Prevent toggling when clicking inside the chat window\n    setOpen(!open);\n  };\n\n  const handleInputChange = (e) => {\n    setUserInput(e.target.value);\n  };\n\n  const handleFormSubmit = async (e) => {\n    e.preventDefault();\n\n    if (userInput.trim() === '') return;\n\n    const userMessage = userInput;\n    setChatHistory([...chatHistory, { sender: 'user', message: userMessage }]);\n    setUserInput('');\n\n    try {\n      const response = await fetch('http://yourserver.com/api/chat', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({ message: userMessage }),\n      });\n\n      if (response.ok) {\n        const data = await response.json();\n        setChatHistory([...chatHistory, { sender: 'user', message: userMessage }, { sender: 'bot', message: data.reply }]);\n      } else {\n        console.error('Error fetching response from server.');\n      }\n    } catch (error) {\n      console.error('Error:', error);\n    }\n  };\n\n  return (\n    <div className={`chatbot-container ${open ? 'open' : ''}`} onClick={toggleOpen}>\n      {open && (\n        <div className=\"chatbot-content\" onClick={(e) => e.stopPropagation()}>\n          <button className=\"close-button\" onClick={toggleOpen}>Ã—</button>\n          <h3>ChatBot</h3>\n          <div className=\"chat-history\">\n            {chatHistory.map((chat, index) => (\n              <p key={index} className={chat.sender === 'user' ? 'user-message' : 'bot-message'}>\n                {chat.message}\n              </p>\n            ))}\n          </div>\n          <form onSubmit={handleFormSubmit}>\n            <input type=\"text\" value={userInput} onChange={handleInputChange} />\n            <button type=\"submit\">Send</button>\n          </form>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default ChatBot;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAO,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEvB,MAAMC,OAAO,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACpB,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGN,QAAQ,CAAC,KAAK,CAAC;EACvC,MAAM,CAACO,SAAS,EAAEC,YAAY,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAC9C,MAAM,CAACS,WAAW,EAAEC,cAAc,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAElD,MAAMW,UAAU,GAAIC,CAAC,IAAK;IACxBA,CAAC,CAACC,eAAe,CAAC,CAAC,CAAC,CAAC;IACrBP,OAAO,CAAC,CAACD,IAAI,CAAC;EAChB,CAAC;EAED,MAAMS,iBAAiB,GAAIF,CAAC,IAAK;IAC/BJ,YAAY,CAACI,CAAC,CAACG,MAAM,CAACC,KAAK,CAAC;EAC9B,CAAC;EAED,MAAMC,gBAAgB,GAAG,MAAOL,CAAC,IAAK;IACpCA,CAAC,CAACM,cAAc,CAAC,CAAC;IAElB,IAAIX,SAAS,CAACY,IAAI,CAAC,CAAC,KAAK,EAAE,EAAE;IAE7B,MAAMC,WAAW,GAAGb,SAAS;IAC7BG,cAAc,CAAC,CAAC,GAAGD,WAAW,EAAE;MAAEY,MAAM,EAAE,MAAM;MAAEC,OAAO,EAAEF;IAAY,CAAC,CAAC,CAAC;IAC1EZ,YAAY,CAAC,EAAE,CAAC;IAEhB,IAAI;MACF,MAAMe,QAAQ,GAAG,MAAMC,KAAK,CAAC,gCAAgC,EAAE;QAC7DC,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UACP,cAAc,EAAE;QAClB,CAAC;QACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;UAAEP,OAAO,EAAEF;QAAY,CAAC;MAC/C,CAAC,CAAC;MAEF,IAAIG,QAAQ,CAACO,EAAE,EAAE;QACf,MAAMC,IAAI,GAAG,MAAMR,QAAQ,CAACS,IAAI,CAAC,CAAC;QAClCtB,cAAc,CAAC,CAAC,GAAGD,WAAW,EAAE;UAAEY,MAAM,EAAE,MAAM;UAAEC,OAAO,EAAEF;QAAY,CAAC,EAAE;UAAEC,MAAM,EAAE,KAAK;UAAEC,OAAO,EAAES,IAAI,CAACE;QAAM,CAAC,CAAC,CAAC;MACpH,CAAC,MAAM;QACLC,OAAO,CAACC,KAAK,CAAC,sCAAsC,CAAC;MACvD;IACF,CAAC,CAAC,OAAOA,KAAK,EAAE;MACdD,OAAO,CAACC,KAAK,CAAC,QAAQ,EAAEA,KAAK,CAAC;IAChC;EACF,CAAC;EAED,oBACEjC,OAAA;IAAKkC,SAAS,EAAE,qBAAqB/B,IAAI,GAAG,MAAM,GAAG,EAAE,EAAG;IAACgC,OAAO,EAAE1B,UAAW;IAAA2B,QAAA,EAC5EjC,IAAI,iBACHH,OAAA;MAAKkC,SAAS,EAAC,iBAAiB;MAACC,OAAO,EAAGzB,CAAC,IAAKA,CAAC,CAACC,eAAe,CAAC,CAAE;MAAAyB,QAAA,gBACnEpC,OAAA;QAAQkC,SAAS,EAAC,cAAc;QAACC,OAAO,EAAE1B,UAAW;QAAA2B,QAAA,EAAC;MAAC;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eAChExC,OAAA;QAAAoC,QAAA,EAAI;MAAO;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAChBxC,OAAA;QAAKkC,SAAS,EAAC,cAAc;QAAAE,QAAA,EAC1B7B,WAAW,CAACkC,GAAG,CAAC,CAACC,IAAI,EAAEC,KAAK,kBAC3B3C,OAAA;UAAekC,SAAS,EAAEQ,IAAI,CAACvB,MAAM,KAAK,MAAM,GAAG,cAAc,GAAG,aAAc;UAAAiB,QAAA,EAC/EM,IAAI,CAACtB;QAAO,GADPuB,KAAK;UAAAN,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAEV,CACJ;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC,CAAC,eACNxC,OAAA;QAAM4C,QAAQ,EAAE7B,gBAAiB;QAAAqB,QAAA,gBAC/BpC,OAAA;UAAO6C,IAAI,EAAC,MAAM;UAAC/B,KAAK,EAAET,SAAU;UAACyC,QAAQ,EAAElC;QAAkB;UAAAyB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,eACpExC,OAAA;UAAQ6C,IAAI,EAAC,QAAQ;UAAAT,QAAA,EAAC;QAAI;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC/B,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACJ;EACN;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV,CAAC;AAACtC,EAAA,CAhEID,OAAO;AAAA8C,EAAA,GAAP9C,OAAO;AAkEb,eAAeA,OAAO;AAAC,IAAA8C,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}